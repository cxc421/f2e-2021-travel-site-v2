@use "../../styles/variable" as *;

.wrapper {
  position: relative;

  // &:active {
  //   transform: translateY(1px);
  // }
}

.container {
  background-color: $color-white;
  padding: 16px;
  display: flex;
  cursor: pointer;

  @media (max-width: $screen-tablet) {
    padding: 12px;
  }

  @media (hover: hover) {
    &:hover {
      .imgArea {
        &::after {
          opacity: 0.4;
        }
        .detailButton {
          transform: translate(-50%, -50%);
          opacity: 1;
        }
      }

      .bottom {
        .detailButton {
          color: $color-white;
          background-color: $color-red;
        }
      }
    }
  }
}

.imgArea {
  height: 196px;
  flex-basis: 196px;
  flex-shrink: 1;
  flex-grow: 0;
  min-width: 140px;

  position: relative;

  // Loading CSS backgound
  @include with-loading-bg(lighten($color-gray, 20%));

  &::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: $color-black;
    opacity: 0;
    transition: opacity 0.4s;
    cursor: pointer;
  }

  .detailButton {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -10%);
    opacity: 0;
    z-index: $z-index-card-button;
    transition: all 0.4s;
    display: none;
  }

  @media (max-width: $screen-desktop-small) {
    height: 120px;
    flex-basis: 120px;
    flex-shrink: 0;
    min-width: 0px;

    .detailButton {
      display: block;
    }
  }

  @media (max-width: $screen-tablet) {
    height: 96px;
    flex-basis: 96px;
  }

  @media (max-width: $screen-mobile) {
    height: 150px;
    flex-basis: 150px;
  }

  @media (max-width: $screen-mobile-small) {
    height: 106px;
    flex-basis: 106px;
  }
}

.content {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: 287px;
  width: 0;
  margin-left: 16px;

  position: relative;

  display: flex;
  flex-direction: column;
  justify-content: space-between;

  @media (max-width: $screen-desktop-small) {
    flex-basis: 100%;
  }
}

.title {
  margin: 0;
  font-weight: 400;
  font-size: 16px;
  line-height: 23px;

  flex-shrink: 0;

  @include with-line-clamp(1);

  @media (max-width: $screen-desktop-small) {
    white-space: normal;

    @include with-line-clamp(3);
  }

  @media (max-width: $screen-tablet) {
    font-size: 14px;
  }

  @media (max-width: $screen-mobile) {
    font-size: 16px;
  }

  @media (max-width: $screen-mobile-small) {
    font-size: 14px;
  }
}

.description {
  margin: 14px 0;
  font-size: 14px;
  line-height: 21px;
  color: $color-gray;

  @include with-line-clamp(5);

  @media (max-width: $screen-desktop-small) {
    display: none;
  }
}

.bottom {
  width: 100%;
  height: 40px;

  flex-shrink: 0;

  display: flex;
  justify-content: space-between;
  gap: 5px;

  @media (max-width: $screen-tablet) {
    height: 24px;
  }

  .location {
    flex-basis: 50%;

    display: flex;
    align-items: center;
    justify-content: flex-start;

    > span {
      font-size: 14px;
      margin-left: 8px;
    }

    @media (max-width: $screen-desktop-small) {
      flex-basis: 100%;
      max-width: 100%;

      > span {
        @include with-line-clamp(1);
      }
    }

    @media (max-width: $screen-mobile-small) {
      > span {
        font-size: 12px;
        margin-left: 6px;
      }
    }
  }

  .detailButton {
    flex-basis: 50%;

    @media (max-width: $screen-desktop-small) {
      display: none;
    }
  }
}

.shadow {
  position: absolute;
  bottom: -19px;
  left: 9px;
  right: 9px;
  z-index: -1;

  &::before,
  &::after {
    position: absolute;
    content: "";
    width: 265.16px;
    height: 45px;
    bottom: 0;
    @include shadow-background;
  }

  &::before {
    left: 0;
    transform-origin: left;
    transform: skewY(-0.1681rad);
  }

  &::after {
    right: 0;
    transform-origin: right;
    transform: skewY(0.1681rad);
  }

  @media (max-width: $screen-desktop-small) {
    left: 6px;
    right: 6px;
    bottom: -17px;

    &::before,
    &::after {
      width: 150.99px;
      height: 45px;
    }

    &::before {
      transform: skewY(-0.28965rad);
    }

    &::after {
      transform: skewY(0.28965rad);
    }
  }
}
